angular.module("angular-dimple.core",[]).service("angular-dimple.core",[function(){return{filter:function(a,b,c,d,e){if(null!==b){var f=this.filterData(b,e);a.data=f,void 0!==d&&(a.data=dimple.filterData(f,c,[d]))}},filterData:function(a,b){if(b){var c=b.split(":");return dimple.filterData(a,c[0],[c[1]])}return a}}}]),angular.module("angular-dimple",["angular-dimple.core","angular-dimple.graph","angular-dimple.legend","angular-dimple.x","angular-dimple.y","angular-dimple.p","angular-dimple.line","angular-dimple.bar","angular-dimple.stacked-bar","angular-dimple.area","angular-dimple.stacked-area","angular-dimple.scatter-plot","angular-dimple.ring"]).constant("MODULE_VERSION","0.0.1").value("defaults",{foo:"bar"}),angular.module("angular-dimple.area",[]).directive("area",["angular-dimple.core",function(a){return{restrict:"E",replace:!0,require:["area","^graph"],controller:["$scope","$element","$attrs",function(){}],link:function(b,c,d,e){function f(){if(d.value)area=h.addSeries([d.field],dimple.plot.area),a.filter(area,b.data,d.field,d.value,d.filter),area.lineMarkers=!0;else{var c=dimple.getUniqueValues(b.data,d.field);angular.forEach(c,function(c){area=h.addSeries([d.field],dimple.plot.area),a.filter(area,b.data,d.field,c,d.filter),area.lineMarkers=!0})}g.draw()}var g=e[1],h=(e[0],g.getChart());b.$watch("data",function(a){a&&f()})}}}]),angular.module("angular-dimple.bar",[]).directive("bar",["angular-dimple.core",function(a){return{restrict:"E",replace:!0,require:["bar","^graph"],controller:["$scope","$element","$attrs",function(){}],link:function(b,c,d,e){function f(){bar=h.addSeries([d.field],dimple.plot.bar),a.filter(bar,b.data,d.field,d.value,d.filter),g.draw()}var g=e[1],h=(e[0],g.getChart());b.$watch("data",function(a){a&&f()})}}}]),angular.module("angular-dimple.graph",[]).directive("graph",[function(){return{restrict:"E",replace:!0,scope:{data:"="},require:["graph"],transclude:!0,compile:function(a){var b=(1e9*Math.random()).toString(36).replace(".","_");return a.append('<div class="dimple-graph" id="dng-'+b+'"></div>'),{post:function(a,c,d,e,f){var g=e[0];g._createChart(b),a.$watch("data",function(a){a&&g.setData()}),f(a,function(a){c.append(a)})}}},controller:["$scope","$element","$attrs",function(a,b,c){var d,e;this._createChart=function(a){e=a;var b=dimple.newSvg("#dng-"+e,c.width,c.height);d=new dimple.chart(b);var f="false"===c.autoStyle?!0:!1;d.noFormats=f},this.getChart=function(){return d},this.setData=function(){d.data=a.data},this.draw=function(){d.draw()},this.getID=function(){return e}}]}}]),angular.module("angular-dimple.legend",[]).directive("legend",[function(){return{restrict:"E",replace:!0,require:["legend","^graph"],controller:["$scope","$element","$attrs",function(){}],link:function(a,b,c,d){function e(){var a=c.left?c.left:"10%",b=c.top?c.top:"4%",d=c.height?c.height:"10%",e=c.width?c.width:"90%",f=c.position?c.position:"left";g.addLegend(a,b,e,d,f)}var f=d[1],g=f.getChart();a.$watch("data",function(a){a&&e()})}}}]),angular.module("angular-dimple.line",[]).directive("line",["angular-dimple.core",function(a){return{restrict:"E",replace:!0,require:["line","^graph"],controller:["$scope","$element","$attrs",function(){}],link:function(b,c,d,e){function f(){line=h.addSeries([d.field],dimple.plot.line),a.filter(line,b.data,d.field,d.value,d.filter),line.lineMarkers=!0,g.draw()}var g=e[1],h=(e[0],g.getChart());b.$watch("data",function(a){a&&f()})}}}]),angular.module("angular-dimple.p",[]).directive("p",[function(){return{restrict:"E",replace:!0,require:["p","^graph"],controller:["$scope","$element","$attrs",function(){}],link:function(a,b,c,d){function e(){p=g.addMeasureAxis("p",c.field),c.title&&"null"!==c.title?p.title=c.title:"null"==c.title&&(p.title=null)}var f=d[1],g=f.getChart();a.$watch("data",function(a){a&&e()})}}}]),angular.module("angular-dimple.ring",[]).directive("ring",["angular-dimple.core",function(){return{restrict:"E",replace:!0,require:["ring","^graph"],controller:["$scope","$element","$attrs",function(){}],link:function(a,b,c,d){function e(){var a;ring=g.addSeries([c.field],dimple.plot.pie),c.thickness&&!c.diameter?(a=100-c.thickness+"%",ring.innerRadius=a):c.thickness&&c.diameter?(a=c.diameter-c.thickness+"%",ring.innerRadius=a):ring.innerRadius="50%",c.diameter&&(ring.outerRadius=c.diameter+"%"),f.draw()}var f=d[1],g=(d[0],f.getChart());a.$watch("data",function(a){a&&e()})}}}]),angular.module("angular-dimple.scatter-plot",[]).directive("scatterPlot",["angular-dimple.core",function(a){return{restrict:"E",replace:!0,require:["scatterPlot","^graph"],controller:[function(){}],link:function(b,c,d,e){function f(){var c=[];d.series&&c.push(d.series),c.push(d.field),(d.label||""===d.label)&&c.push(d.label),scatterPlot=h.addSeries(c,dimple.plot.bubble),scatterPlot.aggregate=dimple.aggregateMethod.avg,a.filter(scatterPlot,b.data,d.field,d.value,d.filter),g.draw()}var g=e[1],h=g.getChart();b.$watch("data",function(a){a&&f()})}}}]),angular.module("angular-dimple.stacked-area",[]).directive("stackedArea",["angular-dimple.core",function(a){return{restrict:"E",replace:!0,require:["stackedArea","^graph"],controller:["$scope","$element","$attrs",function(){}],link:function(b,c,d,e){function f(){area=d.series?h.addSeries([d.series],dimple.plot.area):h.addSeries([d.field],dimple.plot.area),a.filter(area,b.data,d.field,d.value,d.filter),area.lineMarkers=!1,g.draw()}var g=e[1],h=(e[0],g.getChart());b.$watch("data",function(a){a&&f()})}}}]),angular.module("angular-dimple.stacked-bar",[]).directive("stackedBar",["angular-dimple.core",function(a){return{restrict:"E",replace:!0,require:["stackedBar","^graph"],controller:["$scope","$element","$attrs",function(){}],link:function(b,c,d,e){function f(){bar=d.series?h.addSeries([d.series],dimple.plot.bar):h.addSeries([d.field],dimple.plot.bar),a.filter(bar,b.data,d.field,d.value,d.filter),g.draw()}var g=e[1],h=(e[0],g.getChart());b.$watch("data",function(a){a&&f()})}}}]),angular.module("angular-dimple.x",[]).directive("x",[function(){return{restrict:"E",replace:!0,require:["x","^graph"],controller:["$scope","$element","$attrs",function(){}],link:function(a,b,c,d){function e(){c.groupBy?(x="Measure"==c.type?g.addMeasureAxis("x",[c.groupBy,c.field]):"Percent"==c.type?g.addPctAxis("x",c.field):g.addCategoryAxis("x",[c.groupBy,c.field]),c.orderBy&&x.addGroupOrderRule(c.orderBy)):(x="Measure"==c.type?g.addMeasureAxis("x",c.field):"Percent"==c.type?g.addPctAxis("x",c.field):g.addCategoryAxis("x",c.field),c.orderBy&&x.addOrderRule(c.orderBy)),c.title&&"null"!==c.title?x.title=c.title:"null"==c.title&&(x.title=null)}var f=d[1],g=f.getChart();a.$watch("data",function(a){a&&e()})}}}]),angular.module("angular-dimple.y",[]).directive("y",[function(){return{restrict:"E",replace:!0,require:["y","^graph"],controller:["$scope","$element","$attrs",function(){}],link:function(a,b,c,d){function e(){c.groupBy?(y="Category"==c.type?g.addCategoryAxis("y",c.field):"Percent"==c.type?g.addPctAxis("y",c.field):g.addMeasureAxis("y",c.field),c.orderBy&&y.addGroupOrderRule(c.orderBy)):(y="Category"==c.type?g.addCategoryAxis("y",c.field):"Percent"==c.type?g.addPctAxis("y",c.field):g.addMeasureAxis("y",c.field),c.orderBy&&y.addOrderRule(c.orderBy)),c.title&&"null"!==c.title?y.title=c.title:"null"==c.title&&(y.title=null)}var f=d[1],g=f.getChart();a.$watch("data",function(a){a&&e()})}}}]);